<?php

namespace Tests\AppBundle\Util;

use AppBundle\Util\ShiftUtil;
use Doctrine\ORM\EntityManager;
use PHPUnit\Framework\TestCase;

class ShiftUtilTest extends TestCase
{
    /**
     * @var ShiftUtil
     */
    private $shiftUtil;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $entityManagerMock = $this->getMockBuilder(EntityManager::class)
            ->disableOriginalConstructor()
            ->getMock();

        $this->shiftUtil = new ShiftUtil($entityManagerMock);
    }

    public function testGetGroupWorkIntervals()
    {
//        $repository = $this->createMock(ObjectRepository::class);
//
//        $repository->expects($this->any())->method('findBy')->willReturn([
//            (new RotaSlotStaff())
//                ->setStartTime((new \DateTime())->setTime(9, 0))
//                ->setEndTime((new \DateTime())->setTime(11, 0)),
//            (new RotaSlotStaff())
//                ->setStartTime((new \DateTime())->setTime(10, 0))
//                ->setEndTime((new \DateTime())->setTime(12, 0))
//        ]);
//
//        $this->shiftUtil->calculateShiftIntervals(332, 0);
//
//        $this->assertEquals($this->shiftUtil->getGroupWorkIntervals(), [
//            new IntervalModel(
//                (new \DateTime())->setTime(10, 0),
//                (new \DateTime())->setTime(11, 0)
//            )
//        ]);
    }
}